services:
  weather-reminder:
    build:
      context: .
    ports:
      - "8000:8000"
    volumes:
      - ./weather_reminder:/weather_reminder
    environment:
      - DB_HOST=database
      - DB_NAME=weather_reminder
      - DB_USER=admin
      - DB_PASSWORD=admin
    command: >
      sh -c "python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - database
    networks:
      - mynetwork

  database:
    image: postgres:16.2-alpine3.19
    environment:
      - POSTGRES_DB=weather_reminder
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    networks:
      - mynetwork

  celery-worker:
    build:
      context: .
    hostname: worker
    environment:
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_HOST_USER=etqueens22@gmail.com
      - EMAIL_HOST_PASSWORD=jylq lnxw jhwf lill
      - OPEN_WEATHER_API_KEY=6e79765ce84745c27ca024ad23cb50eb
    entrypoint: celery
    command: -A core worker --loglevel=info
    volumes:
      - ./weather_reminder:/weather_reminder
    depends_on:
      - redis
      - weather-reminder
    networks:
      - mynetwork

  redis:
    image: redis:7.2.4-alpine
    hostname: redis
    networks:
      - mynetwork

  flower:
    build:
      context: .
    hostname: flower
    command: sh -c "celery -A core flower --address=0.0.0.0 --port=5555"
    volumes:
      - ./weather_reminder:/weather_reminder
    depends_on:
      - redis
    ports:
      - "5555:5555"
    networks:
      - mynetwork

networks:
  mynetwork:
